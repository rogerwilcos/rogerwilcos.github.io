{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"rmp","disambiguator":[18031823158846474169,996424122313767085]},"crate_root":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src","external_crates":[{"file_name":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6690821744989451171,12722485675148980042]}},{"file_name":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10299290867857879957,2307737600398321203]}},{"file_name":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17267071439186188524,5947090075777801632]}},{"file_name":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[12085692184376180030,2325848497309868957]}},{"file_name":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[8936839347964662191,1155355671254815164]}},{"file_name":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18336025989301664450,7896662295594103842]}},{"file_name":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14486904687815477866,12169648779788530669]}},{"file_name":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[11674437890728707375,109782440169229110]}},{"file_name":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[18057859910026617710,15742936179991399960]}},{"file_name":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/lib.rs","num":10,"id":{"name":"byteorder","disambiguator":[16546514127765853124,2764422051149728822]}},{"file_name":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/lib.rs","num":11,"id":{"name":"num_traits","disambiguator":[3115649519225773532,3113276089533528559]}},{"file_name":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/lib.rs","num":12,"id":{"name":"num_traits","disambiguator":[17419711868147796208,12107001457820127453]}}],"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":5901,"line_start":1,"line_end":161,"column_start":1,"column_end":36}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":68},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10307,"byte_end":10317,"line_start":12,"line_end":12,"column_start":22,"column_end":32},"alias_span":null,"name":"write_nfix","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10319,"byte_end":10327,"line_start":12,"line_end":12,"column_start":34,"column_end":42},"alias_span":null,"name":"write_i8","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10329,"byte_end":10338,"line_start":12,"line_end":12,"column_start":44,"column_end":53},"alias_span":null,"name":"write_i16","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10340,"byte_end":10349,"line_start":12,"line_end":12,"column_start":55,"column_end":64},"alias_span":null,"name":"write_i32","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10351,"byte_end":10360,"line_start":12,"line_end":12,"column_start":66,"column_end":75},"alias_span":null,"name":"write_i64","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10362,"byte_end":10372,"line_start":12,"line_end":12,"column_start":77,"column_end":87},"alias_span":null,"name":"write_sint","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10396,"byte_end":10406,"line_start":13,"line_end":13,"column_start":22,"column_end":32},"alias_span":null,"name":"write_pfix","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":106},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10408,"byte_end":10416,"line_start":13,"line_end":13,"column_start":34,"column_end":42},"alias_span":null,"name":"write_u8","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":108},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10418,"byte_end":10427,"line_start":13,"line_end":13,"column_start":44,"column_end":53},"alias_span":null,"name":"write_u16","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10429,"byte_end":10438,"line_start":13,"line_end":13,"column_start":55,"column_end":64},"alias_span":null,"name":"write_u32","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10440,"byte_end":10449,"line_start":13,"line_end":13,"column_start":66,"column_end":75},"alias_span":null,"name":"write_u64","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10451,"byte_end":10461,"line_start":13,"line_end":13,"column_start":77,"column_end":87},"alias_span":null,"name":"write_uint","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10484,"byte_end":10493,"line_start":14,"line_end":14,"column_start":21,"column_end":30},"alias_span":null,"name":"write_f32","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":134},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10495,"byte_end":10504,"line_start":14,"line_end":14,"column_start":32,"column_end":41},"alias_span":null,"name":"write_f64","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10527,"byte_end":10540,"line_start":15,"line_end":15,"column_start":21,"column_end":34},"alias_span":null,"name":"write_str_len","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10542,"byte_end":10551,"line_start":15,"line_end":15,"column_start":36,"column_end":45},"alias_span":null,"name":"write_str","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10574,"byte_end":10587,"line_start":16,"line_end":16,"column_start":21,"column_end":34},"alias_span":null,"name":"write_bin_len","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10589,"byte_end":10598,"line_start":16,"line_end":16,"column_start":36,"column_end":45},"alias_span":null,"name":"write_bin","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37249,"byte_end":37258,"line_start":18,"line_end":18,"column_start":22,"column_end":31},"alias_span":null,"name":"read_nfix","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37260,"byte_end":37267,"line_start":18,"line_end":18,"column_start":33,"column_end":40},"alias_span":null,"name":"read_i8","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37269,"byte_end":37277,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"alias_span":null,"name":"read_i16","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37279,"byte_end":37287,"line_start":18,"line_end":18,"column_start":52,"column_end":60},"alias_span":null,"name":"read_i32","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37289,"byte_end":37297,"line_start":18,"line_end":18,"column_start":62,"column_end":70},"alias_span":null,"name":"read_i64","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":382},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37321,"byte_end":37330,"line_start":19,"line_end":19,"column_start":22,"column_end":31},"alias_span":null,"name":"read_pfix","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37332,"byte_end":37339,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"alias_span":null,"name":"read_u8","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":386},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37341,"byte_end":37349,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"alias_span":null,"name":"read_u16","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":388},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37351,"byte_end":37359,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"read_u32","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37361,"byte_end":37369,"line_start":19,"line_end":19,"column_start":62,"column_end":70},"alias_span":null,"name":"read_u64","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37392,"byte_end":37400,"line_start":20,"line_end":20,"column_start":21,"column_end":29},"alias_span":null,"name":"read_f32","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":410},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37402,"byte_end":37410,"line_start":20,"line_end":20,"column_start":31,"column_end":39},"alias_span":null,"name":"read_f64","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":466},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37433,"byte_end":37445,"line_start":21,"line_end":21,"column_start":21,"column_end":33},"alias_span":null,"name":"read_str_len","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":470},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37447,"byte_end":37455,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"alias_span":null,"name":"read_str","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":476},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37457,"byte_end":37476,"line_start":21,"line_end":21,"column_start":45,"column_end":64},"alias_span":null,"name":"read_str_from_slice","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":474},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37478,"byte_end":37490,"line_start":21,"line_end":21,"column_start":66,"column_end":78},"alias_span":null,"name":"read_str_ref","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37492,"byte_end":37509,"line_start":21,"line_end":21,"column_start":80,"column_end":97},"alias_span":null,"name":"DecodeStringError","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":498},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37532,"byte_end":37544,"line_start":22,"line_end":22,"column_start":21,"column_end":33},"alias_span":null,"name":"read_fixext1","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":500},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37546,"byte_end":37558,"line_start":22,"line_end":22,"column_start":35,"column_end":47},"alias_span":null,"name":"read_fixext2","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37560,"byte_end":37572,"line_start":22,"line_end":22,"column_start":49,"column_end":61},"alias_span":null,"name":"read_fixext4","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37574,"byte_end":37586,"line_start":22,"line_end":22,"column_start":63,"column_end":75},"alias_span":null,"name":"read_fixext8","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37588,"byte_end":37601,"line_start":22,"line_end":22,"column_start":77,"column_end":90},"alias_span":null,"name":"read_fixext16","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37623,"byte_end":37636,"line_start":23,"line_end":23,"column_start":21,"column_end":34},"alias_span":null,"name":"read_ext_meta","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":698},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37638,"byte_end":37645,"line_start":23,"line_end":23,"column_start":36,"column_end":43},"alias_span":null,"name":"ExtMeta","value":"","parent":{"krate":0,"index":330}},{"kind":"Use","ref_id":{"krate":0,"index":668},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5763,"byte_end":5769,"line_start":158,"line_end":158,"column_start":17,"column_end":23},"alias_span":null,"name":"Marker","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":5901,"line_start":1,"line_end":161,"column_start":1,"column_end":36},"name":"","qualname":"::","value":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":32},{"krate":0,"index":330},{"krate":0,"index":664},{"krate":0,"index":666}],"decl_id":null,"docs":" # The Rust MessagePack Library","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":213},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6086,"byte_end":6092,"line_start":8,"line_end":8,"column_start":5,"column_end":11},"name":"FixPos","qualname":"::marker::Marker::FixPos","value":"Marker::FixPos(u8)","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":217},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6102,"byte_end":6108,"line_start":9,"line_end":9,"column_start":5,"column_end":11},"name":"FixNeg","qualname":"::marker::Marker::FixNeg","value":"Marker::FixNeg(i8)","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":221},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6118,"byte_end":6122,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"name":"Null","qualname":"::marker::Marker::Null","value":"Marker::Null","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":223},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6128,"byte_end":6132,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"True","qualname":"::marker::Marker::True","value":"Marker::True","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":225},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6138,"byte_end":6143,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"False","qualname":"::marker::Marker::False","value":"Marker::False","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":227},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6149,"byte_end":6151,"line_start":13,"line_end":13,"column_start":5,"column_end":7},"name":"U8","qualname":"::marker::Marker::U8","value":"Marker::U8","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":229},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6157,"byte_end":6160,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"U16","qualname":"::marker::Marker::U16","value":"Marker::U16","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":231},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6166,"byte_end":6169,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"U32","qualname":"::marker::Marker::U32","value":"Marker::U32","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":233},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6175,"byte_end":6178,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"U64","qualname":"::marker::Marker::U64","value":"Marker::U64","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":235},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6184,"byte_end":6186,"line_start":17,"line_end":17,"column_start":5,"column_end":7},"name":"I8","qualname":"::marker::Marker::I8","value":"Marker::I8","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":237},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6192,"byte_end":6195,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"I16","qualname":"::marker::Marker::I16","value":"Marker::I16","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":239},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6201,"byte_end":6204,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"I32","qualname":"::marker::Marker::I32","value":"Marker::I32","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":241},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6210,"byte_end":6213,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"I64","qualname":"::marker::Marker::I64","value":"Marker::I64","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":243},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6219,"byte_end":6222,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"F32","qualname":"::marker::Marker::F32","value":"Marker::F32","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":245},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6228,"byte_end":6231,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"F64","qualname":"::marker::Marker::F64","value":"Marker::F64","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":247},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6237,"byte_end":6243,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"FixStr","qualname":"::marker::Marker::FixStr","value":"Marker::FixStr(u8)","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":251},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6253,"byte_end":6257,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Str8","qualname":"::marker::Marker::Str8","value":"Marker::Str8","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":253},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6263,"byte_end":6268,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Str16","qualname":"::marker::Marker::Str16","value":"Marker::Str16","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":255},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6274,"byte_end":6279,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Str32","qualname":"::marker::Marker::Str32","value":"Marker::Str32","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":257},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6285,"byte_end":6289,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Bin8","qualname":"::marker::Marker::Bin8","value":"Marker::Bin8","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":259},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6295,"byte_end":6300,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Bin16","qualname":"::marker::Marker::Bin16","value":"Marker::Bin16","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6306,"byte_end":6311,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Bin32","qualname":"::marker::Marker::Bin32","value":"Marker::Bin32","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":263},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6317,"byte_end":6325,"line_start":30,"line_end":30,"column_start":5,"column_end":13},"name":"FixArray","qualname":"::marker::Marker::FixArray","value":"Marker::FixArray(u8)","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":267},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6335,"byte_end":6342,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Array16","qualname":"::marker::Marker::Array16","value":"Marker::Array16","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":269},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6348,"byte_end":6355,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"name":"Array32","qualname":"::marker::Marker::Array32","value":"Marker::Array32","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":271},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6361,"byte_end":6367,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"FixMap","qualname":"::marker::Marker::FixMap","value":"Marker::FixMap(u8)","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":275},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6377,"byte_end":6382,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Map16","qualname":"::marker::Marker::Map16","value":"Marker::Map16","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":277},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6388,"byte_end":6393,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Map32","qualname":"::marker::Marker::Map32","value":"Marker::Map32","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":279},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6399,"byte_end":6406,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"FixExt1","qualname":"::marker::Marker::FixExt1","value":"Marker::FixExt1","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":281},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6412,"byte_end":6419,"line_start":37,"line_end":37,"column_start":5,"column_end":12},"name":"FixExt2","qualname":"::marker::Marker::FixExt2","value":"Marker::FixExt2","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":283},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6425,"byte_end":6432,"line_start":38,"line_end":38,"column_start":5,"column_end":12},"name":"FixExt4","qualname":"::marker::Marker::FixExt4","value":"Marker::FixExt4","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":285},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6438,"byte_end":6445,"line_start":39,"line_end":39,"column_start":5,"column_end":12},"name":"FixExt8","qualname":"::marker::Marker::FixExt8","value":"Marker::FixExt8","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":287},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6451,"byte_end":6459,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"FixExt16","qualname":"::marker::Marker::FixExt16","value":"Marker::FixExt16","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":289},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6465,"byte_end":6469,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Ext8","qualname":"::marker::Marker::Ext8","value":"Marker::Ext8","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":291},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6475,"byte_end":6480,"line_start":42,"line_end":42,"column_start":5,"column_end":10},"name":"Ext16","qualname":"::marker::Marker::Ext16","value":"Marker::Ext16","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":293},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6486,"byte_end":6491,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Ext32","qualname":"::marker::Marker::Ext32","value":"Marker::Ext32","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":295},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6497,"byte_end":6505,"line_start":44,"line_end":44,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::marker::Marker::Reserved","value":"Marker::Reserved","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":668},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6073,"byte_end":6079,"line_start":7,"line_end":7,"column_start":10,"column_end":16},"name":"Marker","qualname":"::marker::Marker","value":"Marker::{FixPos, FixNeg, Null, True, False, U8, U16, U32, U64, I8, I16, I32, I64, F32, F64, FixStr, Str8, Str16, Str32, Bin8, Bin16, Bin32, FixArray, Array16, Array32, FixMap, Map16, Map32, FixExt1, FixExt2, FixExt4, FixExt8, FixExt16, Ext8, Ext16, Ext32, Reserved}","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295}],"decl_id":null,"docs":" Format markers.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6064,"byte_end":6508,"line_start":7,"line_end":45,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6590,"byte_end":6597,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Marker>::from_u8","value":"fn (n: u8) -> Marker","parent":null,"children":[],"decl_id":null,"docs":" Construct a msgpack marker from a single byte.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":8224,"byte_end":8229,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"to_u8","qualname":"<Marker>::to_u8","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Converts a marker object into a single-byte representation.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":32},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encode","qualname":"::encode","value":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/encode/mod.rs","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":80},{"krate":0,"index":116},{"krate":0,"index":136},{"krate":0,"index":158},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":202},{"krate":0,"index":216},{"krate":0,"index":222},{"krate":0,"index":228},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":262},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":274},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":302},{"krate":0,"index":306},{"krate":0,"index":310},{"krate":0,"index":314},{"krate":0,"index":320},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328}],"decl_id":null,"docs":" Provides various functions and structs for MessagePack encoding.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,115,105,110,116,46,114,115],"byte_start":20131,"byte_end":20141,"line_start":27,"line_end":27,"column_start":8,"column_end":18},"name":"write_nfix","qualname":"::encode::sint::write_nfix","value":"fn <W> (wr: &mut W, val: i8) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write a negative small integer value as a negative fixnum into the\n given write.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":70},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,115,105,110,116,46,114,115],"byte_start":21405,"byte_end":21413,"line_start":61,"line_end":61,"column_start":8,"column_end":16},"name":"write_i8","qualname":"::encode::sint::write_i8","value":"fn <W> (wr: &mut W, val: i8) -> Result<(), ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `i8` value as a 2-byte sequence into the given write.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,115,105,110,116,46,114,115],"byte_start":22295,"byte_end":22304,"line_start":82,"line_end":82,"column_start":8,"column_end":17},"name":"write_i16","qualname":"::encode::sint::write_i16","value":"fn <W> (wr: &mut W, val: i16) -> Result<(), ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `i16` value as a 3-byte sequence into the given write.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,115,105,110,116,46,114,115],"byte_start":23189,"byte_end":23198,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"write_i32","qualname":"::encode::sint::write_i32","value":"fn <W> (wr: &mut W, val: i32) -> Result<(), ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `i32` value as a 5-byte sequence into the given write.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,115,105,110,116,46,114,115],"byte_start":24083,"byte_end":24092,"line_start":124,"line_end":124,"column_start":8,"column_end":17},"name":"write_i64","qualname":"::encode::sint::write_i64","value":"fn <W> (wr: &mut W, val: i64) -> Result<(), ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `i64` value as a 9-byte sequence into the given write.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,115,105,110,116,46,114,115],"byte_start":25055,"byte_end":25065,"line_start":147,"line_end":147,"column_start":8,"column_end":18},"name":"write_sint","qualname":"::encode::sint::write_sint","value":"fn <W> (wr: &mut W, val: i64) -> Result<Marker, ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `i64` value into the given write using the most efficient\n representation, returning the marker used.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":104},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,117,105,110,116,46,114,115],"byte_start":27251,"byte_end":27261,"line_start":27,"line_end":27,"column_start":8,"column_end":18},"name":"write_pfix","qualname":"::encode::uint::write_pfix","value":"fn <W> (wr: &mut W, val: u8) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an unsigned small integer value as a positive fixint into the\n given write.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":106},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,117,105,110,116,46,114,115],"byte_start":28443,"byte_end":28451,"line_start":59,"line_end":59,"column_start":8,"column_end":16},"name":"write_u8","qualname":"::encode::uint::write_u8","value":"fn <W> (wr: &mut W, val: u8) -> Result<(), ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `u8` value as a 2-byte sequence into the given write.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,117,105,110,116,46,114,115],"byte_start":29276,"byte_end":29285,"line_start":79,"line_end":79,"column_start":8,"column_end":17},"name":"write_u16","qualname":"::encode::uint::write_u16","value":"fn <W> (wr: &mut W, val: u16) -> Result<(), ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `u16` value strictly as a 3-byte sequence into the given write.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":110},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,117,105,110,116,46,114,115],"byte_start":30113,"byte_end":30122,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"write_u32","qualname":"::encode::uint::write_u32","value":"fn <W> (wr: &mut W, val: u32) -> Result<(), ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `u32` value strictly as a 5-byte sequence into the given write.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,117,105,110,116,46,114,115],"byte_start":30950,"byte_end":30959,"line_start":119,"line_end":119,"column_start":8,"column_end":17},"name":"write_u64","qualname":"::encode::uint::write_u64","value":"fn <W> (wr: &mut W, val: u64) -> Result<(), ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `u64` value strictly as a 9-byte sequence into the given write.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":114},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,117,105,110,116,46,114,115],"byte_start":31702,"byte_end":31712,"line_start":138,"line_end":138,"column_start":8,"column_end":18},"name":"write_uint","qualname":"::encode::uint::write_uint","value":"fn <W> (wr: &mut W, val: u64) -> Result<Marker, ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `u64` value into the given write using the most efficient\n representation, returning the marker used.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,100,101,99,46,114,115],"byte_start":32720,"byte_end":32729,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"write_f32","qualname":"::encode::dec::write_f32","value":"fn <W> (wr: &mut W, val: f32) -> Result<(), ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `f32` value as a 5-byte sequence into the given write.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,100,101,99,46,114,115],"byte_start":33223,"byte_end":33232,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"write_f64","qualname":"::encode::dec::write_f64","value":"fn <W> (wr: &mut W, val: f64) -> Result<(), ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `f64` value as a 9-byte sequence into the given write.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,115,116,114,46,114,115],"byte_start":33809,"byte_end":33822,"line_start":14,"line_end":14,"column_start":8,"column_end":21},"name":"write_str_len","qualname":"::encode::str::write_str_len","value":"fn <W> (wr: &mut W, len: u32) -> Result<Marker, ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient string length implementation to the given\n write, returning the marker used.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,115,116,114,46,114,115],"byte_start":34737,"byte_end":34746,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"write_str","qualname":"::encode::str::write_str","value":"fn <W> (wr: &mut W, data: &str) -> Result<(), ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient string binary representation to the\n given `Write`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,98,105,110,46,114,115],"byte_start":35515,"byte_end":35528,"line_start":17,"line_end":17,"column_start":8,"column_end":21},"name":"write_bin_len","qualname":"::encode::bin::write_bin_len","value":"fn <W> (wr: &mut W, len: u32) -> Result<Marker, ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient binary array length implementation to the given\n write, returning the marker used.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,98,105,110,46,114,115],"byte_start":36310,"byte_end":36319,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"write_bin","qualname":"::encode::bin::write_bin","value":"fn <W> (wr: &mut W, data: &[u8]) -> Result<(), ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient binary implementation to the given `Write`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":254},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10818,"byte_end":10823,"line_start":27,"line_end":27,"column_start":10,"column_end":15},"name":"Error","qualname":"::encode::Error","value":"::std::io::Error","parent":null,"children":[],"decl_id":null,"docs":" The error type for I/O operations of the `Write` and associated traits.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":278},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":12216,"byte_end":12225,"line_start":83,"line_end":83,"column_start":8,"column_end":17},"name":"write_nil","qualname":"::encode::write_nil","value":"fn <W> (wr: &mut W) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write a nil value into the given write.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":280},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":12655,"byte_end":12665,"line_start":96,"line_end":96,"column_start":8,"column_end":18},"name":"write_bool","qualname":"::encode::write_bool","value":"fn <W> (wr: &mut W, val: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write a bool value into the given write.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":297},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":14531,"byte_end":14549,"line_start":150,"line_end":150,"column_start":5,"column_end":23},"name":"InvalidMarkerWrite","qualname":"::encode::ValueWriteError::InvalidMarkerWrite","value":"ValueWriteError::InvalidMarkerWrite(Error)","parent":{"krate":0,"index":686},"children":[],"decl_id":null,"docs":" I/O error while writing marker.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":301},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":14600,"byte_end":14616,"line_start":152,"line_end":152,"column_start":5,"column_end":21},"name":"InvalidDataWrite","qualname":"::encode::ValueWriteError::InvalidDataWrite","value":"ValueWriteError::InvalidDataWrite(Error)","parent":{"krate":0,"index":686},"children":[],"decl_id":null,"docs":" I/O error while writing data.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":686},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":14469,"byte_end":14484,"line_start":148,"line_end":148,"column_start":10,"column_end":25},"name":"ValueWriteError","qualname":"::encode::ValueWriteError","value":"ValueWriteError::{InvalidMarkerWrite, InvalidDataWrite}","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":301}],"decl_id":null,"docs":" An error that can occur when attempting to write multi-byte MessagePack value.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":324},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":16102,"byte_end":16117,"line_start":206,"line_end":206,"column_start":8,"column_end":23},"name":"write_array_len","qualname":"::encode::write_array_len","value":"fn <W> (wr: &mut W, len: u32) -> Result<Marker, ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient array length implementation to the given write,\n returning the marker used.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":326},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":16894,"byte_end":16907,"line_start":230,"line_end":230,"column_start":8,"column_end":21},"name":"write_map_len","qualname":"::encode::write_map_len","value":"fn <W> (wr: &mut W, len: u32) -> Result<Marker, ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient map length implementation to the given write,\n returning the marker used.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":328},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":17822,"byte_end":17836,"line_start":259,"line_end":259,"column_start":8,"column_end":22},"name":"write_ext_meta","qualname":"::encode::write_ext_meta","value":"fn <W> (wr: &mut W, len: u32, ty: i8) -> Result<Marker, ValueWriteError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient ext metadata implementation to the given\n write, returning the marker used.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":330},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decode","qualname":"::decode","value":"/home/ilyadruzhinin/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.7/src/decode/mod.rs","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":362},{"krate":0,"index":392},{"krate":0,"index":412},{"krate":0,"index":478},{"krate":0,"index":512},{"krate":0,"index":524},{"krate":0,"index":536},{"krate":0,"index":542},{"krate":0,"index":554},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":594},{"krate":0,"index":600},{"krate":0,"index":604},{"krate":0,"index":608},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":618},{"krate":0,"index":624},{"krate":0,"index":628},{"krate":0,"index":632},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":662}],"decl_id":null,"docs":" Provides various functions and structs for MessagePack decoding.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":352},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,105,110,116,46,114,115],"byte_start":50645,"byte_end":50654,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"read_nfix","qualname":"::decode::sint::read_nfix","value":"fn <R> (rd: &mut R) -> Result<i8, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read a single byte from the given reader and to decode it as a negative fixnum\n value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":354},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,105,110,116,46,114,115],"byte_start":51469,"byte_end":51476,"line_start":47,"line_end":47,"column_start":8,"column_end":15},"name":"read_i8","qualname":"::decode::sint::read_i8","value":"fn <R> (rd: &mut R) -> Result<i8, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 2 bytes from the given reader and to decode them as `i8` value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":356},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,105,110,116,46,114,115],"byte_start":52288,"byte_end":52296,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"read_i16","qualname":"::decode::sint::read_i16","value":"fn <R> (rd: &mut R) -> Result<i16, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 3 bytes from the given reader and to decode them as `i16` value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":358},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,105,110,116,46,114,115],"byte_start":53111,"byte_end":53119,"line_start":93,"line_end":93,"column_start":8,"column_end":16},"name":"read_i32","qualname":"::decode::sint::read_i32","value":"fn <R> (rd: &mut R) -> Result<i32, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 5 bytes from the given reader and to decode them as `i32` value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":360},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,105,110,116,46,114,115],"byte_start":53934,"byte_end":53942,"line_start":116,"line_end":116,"column_start":8,"column_end":16},"name":"read_i64","qualname":"::decode::sint::read_i64","value":"fn <R> (rd: &mut R) -> Result<i64, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 9 bytes from the given reader and to decode them as `i64` value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":382},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,117,105,110,116,46,114,115],"byte_start":55035,"byte_end":55044,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"read_pfix","qualname":"::decode::uint::read_pfix","value":"fn <R> (rd: &mut R) -> Result<u8, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read a single byte from the given reader and to decode it as a positive fixnum\n value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":384},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,117,105,110,116,46,114,115],"byte_start":55724,"byte_end":55731,"line_start":42,"line_end":42,"column_start":8,"column_end":15},"name":"read_u8","qualname":"::decode::uint::read_u8","value":"fn <R> (rd: &mut R) -> Result<u8, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 2 bytes from the given reader and to decode them as `u8` value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":386},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,117,105,110,116,46,114,115],"byte_start":56543,"byte_end":56551,"line_start":65,"line_end":65,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::decode::uint::read_u16","value":"fn <R> (rd: &mut R) -> Result<u16, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 3 bytes from the given reader and to decode them as `u16` value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":388},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,117,105,110,116,46,114,115],"byte_start":57366,"byte_end":57374,"line_start":88,"line_end":88,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::decode::uint::read_u32","value":"fn <R> (rd: &mut R) -> Result<u32, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 5 bytes from the given reader and to decode them as `u32` value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":390},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,117,105,110,116,46,114,115],"byte_start":58189,"byte_end":58197,"line_start":111,"line_end":111,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::decode::uint::read_u64","value":"fn <R> (rd: &mut R) -> Result<u64, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 9 bytes from the given reader and to decode them as `u64` value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":408},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,100,101,99,46,114,115],"byte_start":59117,"byte_end":59125,"line_start":22,"line_end":22,"column_start":8,"column_end":16},"name":"read_f32","qualname":"::decode::dec::read_f32","value":"fn <R> (rd: &mut R) -> Result<f32, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 5 bytes from the given reader and to decode them as `f32` value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":410},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,100,101,99,46,114,115],"byte_start":59950,"byte_end":59958,"line_start":45,"line_end":45,"column_start":8,"column_end":16},"name":"read_f64","qualname":"::decode::dec::read_f64","value":"fn <R> (rd: &mut R) -> Result<f64, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 9 bytes from the given reader and to decode them as `f64` value.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":307},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":60453,"byte_end":60470,"line_start":11,"line_end":11,"column_start":5,"column_end":22},"name":"InvalidMarkerRead","qualname":"::decode::str::DecodeStringError::InvalidMarkerRead","value":"DecodeStringError::InvalidMarkerRead(Error)","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":311},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":60483,"byte_end":60498,"line_start":12,"line_end":12,"column_start":5,"column_end":20},"name":"InvalidDataRead","qualname":"::decode::str::DecodeStringError::InvalidDataRead","value":"DecodeStringError::InvalidDataRead(Error)","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":315},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":60511,"byte_end":60523,"line_start":13,"line_end":13,"column_start":5,"column_end":17},"name":"TypeMismatch","qualname":"::decode::str::DecodeStringError::TypeMismatch","value":"DecodeStringError::TypeMismatch(Marker)","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":319},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":60627,"byte_end":60645,"line_start":15,"line_end":15,"column_start":5,"column_end":23},"name":"BufferSizeTooSmall","qualname":"::decode::str::DecodeStringError::BufferSizeTooSmall","value":"DecodeStringError::BufferSizeTooSmall(u32)","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" The given buffer is not large enough to accumulate the specified amount of bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":323},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":60656,"byte_end":60667,"line_start":16,"line_end":16,"column_start":5,"column_end":16},"name":"InvalidUtf8","qualname":"::decode::str::DecodeStringError::InvalidUtf8","value":"DecodeStringError::InvalidUtf8(&'a [u8], Utf8Error)","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":692},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":60425,"byte_end":60442,"line_start":10,"line_end":10,"column_start":10,"column_end":27},"name":"DecodeStringError","qualname":"::decode::str::DecodeStringError","value":"DecodeStringError::{InvalidMarkerRead, InvalidDataRead, TypeMismatch, BufferSizeTooSmall, InvalidUtf8}","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":315},{"krate":0,"index":319},{"krate":0,"index":323}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":466},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":62415,"byte_end":62427,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"read_str_len","qualname":"::decode::str::read_str_len","value":"fn <R> (rd: &mut R) -> Result<u32, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read up to 9 bytes from the given reader and to decode them as a string `u32` size\n value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":470},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":64123,"byte_end":64131,"line_start":110,"line_end":110,"column_start":8,"column_end":16},"name":"read_str","qualname":"::decode::str::read_str","value":"fn <'r, R> (rd: &mut R, mut buf: &'r mut [u8]) -> Result<&'r str, DecodeStringError<'r>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read a string data from the given reader and copy it to the buffer provided.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":474},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":65362,"byte_end":65374,"line_start":147,"line_end":147,"column_start":8,"column_end":20},"name":"read_str_ref","qualname":"::decode::str::read_str_ref","value":"fn (rd: &[u8]) -> Result<&[u8], DecodeStringError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read and decode a string value from the reader, returning a borrowed slice from it.","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.6\",\n             note = \"useless, use `read_str_from_slice` instead\")","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":65271,"byte_end":65354,"line_start":146,"line_end":146,"column_start":1,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":476},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":66249,"byte_end":66268,"line_start":176,"line_end":176,"column_start":8,"column_end":27},"name":"read_str_from_slice","qualname":"::decode::str::read_str_from_slice","value":"fn <T> (buf: &T) -> Result<(&str, &[u8]), DecodeStringError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read and decode a string value from the reader, returning a borrowed slice from it.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":498},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,101,120,116,46,114,115],"byte_start":67591,"byte_end":67603,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"read_fixext1","qualname":"::decode::ext::read_fixext1","value":"fn <R> (rd: &mut R) -> Result<(i8, u8), ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 3 bytes from the given reader and interpret them as a fixext1 type\n with data attached.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":500},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,101,120,116,46,114,115],"byte_start":68489,"byte_end":68501,"line_start":47,"line_end":47,"column_start":8,"column_end":20},"name":"read_fixext2","qualname":"::decode::ext::read_fixext2","value":"fn <R> (rd: &mut R) -> Result<(i8, [u8; 2]), ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 4 bytes from the given reader and interpret them as a fixext2 type\n with data attached.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,101,120,116,46,114,115],"byte_start":69370,"byte_end":69382,"line_start":70,"line_end":70,"column_start":8,"column_end":20},"name":"read_fixext4","qualname":"::decode::ext::read_fixext4","value":"fn <R> (rd: &mut R) -> Result<(i8, [u8; 4]), ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 6 bytes from the given reader and interpret them as a fixext4 type\n with data attached.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":504},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,101,120,116,46,114,115],"byte_start":70252,"byte_end":70264,"line_start":93,"line_end":93,"column_start":8,"column_end":20},"name":"read_fixext8","qualname":"::decode::ext::read_fixext8","value":"fn <R> (rd: &mut R) -> Result<(i8, [u8; 8]), ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 10 bytes from the given reader and interpret them as a fixext8 type\n with data attached.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":506},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,101,120,116,46,114,115],"byte_start":71137,"byte_end":71150,"line_start":116,"line_end":116,"column_start":8,"column_end":21},"name":"read_fixext16","qualname":"::decode::ext::read_fixext16","value":"fn <R> (rd: &mut R) -> Result<(i8, [u8; 16]), ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 18 bytes from the given reader and interpret them as a fixext16 type\n with data attached.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":698},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,101,120,116,46,114,115],"byte_start":72199,"byte_end":72206,"line_start":146,"line_end":146,"column_start":12,"column_end":19},"name":"ExtMeta","qualname":"::decode::ext::ExtMeta","value":"ExtMeta { typeid, size }","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":333}],"decl_id":null,"docs":" Extension type meta information.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":331},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,101,120,116,46,114,115],"byte_start":72243,"byte_end":72249,"line_start":148,"line_end":148,"column_start":9,"column_end":15},"name":"typeid","qualname":"::decode::ext::ExtMeta::typeid","value":"i8","parent":{"krate":0,"index":698},"children":[],"decl_id":null,"docs":" Type information.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":333},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,101,120,116,46,114,115],"byte_start":72288,"byte_end":72292,"line_start":150,"line_end":150,"column_start":9,"column_end":13},"name":"size","qualname":"::decode::ext::ExtMeta::size","value":"u32","parent":{"krate":0,"index":698},"children":[],"decl_id":null,"docs":" Byte array size.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,101,120,116,46,114,115],"byte_start":72309,"byte_end":72322,"line_start":153,"line_end":153,"column_start":8,"column_end":21},"name":"read_ext_meta","qualname":"::decode::ext::read_ext_meta","value":"fn <R> (rd: &mut R) -> Result<ExtMeta, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":592},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":37900,"byte_end":37905,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Error","qualname":"::decode::Error","value":"::std::io::Error","parent":null,"children":[],"decl_id":null,"docs":" An error that can occur when attempting to read bytes from the reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":38045,"byte_end":38060,"line_start":40,"line_end":40,"column_start":12,"column_end":27},"name":"MarkerReadError","qualname":"::decode::MarkerReadError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that can occur when attempting to read a MessagePack marker from the reader.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":339},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":38246,"byte_end":38263,"line_start":46,"line_end":46,"column_start":5,"column_end":22},"name":"InvalidMarkerRead","qualname":"::decode::ValueReadError::InvalidMarkerRead","value":"ValueReadError::InvalidMarkerRead(Error)","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Failed to read the marker.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":343},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":38309,"byte_end":38324,"line_start":48,"line_end":48,"column_start":5,"column_end":20},"name":"InvalidDataRead","qualname":"::decode::ValueReadError::InvalidDataRead","value":"ValueReadError::InvalidDataRead(Error)","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Failed to read the data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":347},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":38397,"byte_end":38409,"line_start":50,"line_end":50,"column_start":5,"column_end":17},"name":"TypeMismatch","qualname":"::decode::ValueReadError::TypeMismatch","value":"ValueReadError::TypeMismatch(Marker)","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" The type decoded isn't match with the expected one.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":716},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":38190,"byte_end":38204,"line_start":44,"line_end":44,"column_start":10,"column_end":24},"name":"ValueReadError","qualname":"::decode::ValueReadError","value":"ValueReadError::{InvalidMarkerRead, InvalidDataRead, TypeMismatch}","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":343},{"krate":0,"index":347}],"decl_id":null,"docs":" An error which can occur when attempting to read a MessagePack value from the reader.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":612},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":39711,"byte_end":39722,"line_start":94,"line_end":94,"column_start":8,"column_end":19},"name":"read_marker","qualname":"::decode::read_marker","value":"fn <R> (rd: &mut R) -> Result<Marker, MarkerReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read a single byte from the given reader and to decode it as a MessagePack marker.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":614},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":40481,"byte_end":40489,"line_start":114,"line_end":114,"column_start":8,"column_end":16},"name":"read_nil","qualname":"::decode::read_nil","value":"fn <R> (rd: &mut R) -> Result<(), ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read a single byte from the given reader and to decode it as a nil value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":616},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":41347,"byte_end":41356,"line_start":138,"line_end":138,"column_start":8,"column_end":17},"name":"read_bool","qualname":"::decode::read_bool","value":"fn <R> (rd: &mut R) -> Result<bool, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read a single byte from the given reader and to decode it as a boolean value.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":351},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":41769,"byte_end":41786,"line_start":150,"line_end":150,"column_start":5,"column_end":22},"name":"InvalidMarkerRead","qualname":"::decode::NumValueReadError::InvalidMarkerRead","value":"NumValueReadError::InvalidMarkerRead(Error)","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" Failed to read the marker.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":355},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":41832,"byte_end":41847,"line_start":152,"line_end":152,"column_start":5,"column_end":20},"name":"InvalidDataRead","qualname":"::decode::NumValueReadError::InvalidDataRead","value":"NumValueReadError::InvalidDataRead(Error)","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" Failed to read the data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":359},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":41920,"byte_end":41932,"line_start":154,"line_end":154,"column_start":5,"column_end":17},"name":"TypeMismatch","qualname":"::decode::NumValueReadError::TypeMismatch","value":"NumValueReadError::TypeMismatch(Marker)","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" The type decoded isn't match with the expected one.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":363},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":42003,"byte_end":42013,"line_start":156,"line_end":156,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::decode::NumValueReadError::OutOfRange","value":"NumValueReadError::OutOfRange","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" Out of range integral type conversion attempted.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":722},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":41710,"byte_end":41727,"line_start":148,"line_end":148,"column_start":10,"column_end":27},"name":"NumValueReadError","qualname":"::decode::NumValueReadError","value":"NumValueReadError::{InvalidMarkerRead, InvalidDataRead, TypeMismatch, OutOfRange}","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":355},{"krate":0,"index":359},{"krate":0,"index":363}],"decl_id":null,"docs":" An error which can occur when attempting to read a MessagePack numeric value from the reader.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":636},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":43768,"byte_end":43780,"line_start":208,"line_end":208,"column_start":8,"column_end":20},"name":"read_data_u8","qualname":"::decode::read_data_u8","value":"fn <R> (rd: &mut R) -> Result<u8, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":638},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":43917,"byte_end":43930,"line_start":213,"line_end":213,"column_start":8,"column_end":21},"name":"read_data_u16","qualname":"::decode::read_data_u16","value":"fn <R> (rd: &mut R) -> Result<u16, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":640},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":44093,"byte_end":44106,"line_start":218,"line_end":218,"column_start":8,"column_end":21},"name":"read_data_u32","qualname":"::decode::read_data_u32","value":"fn <R> (rd: &mut R) -> Result<u32, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":642},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":44269,"byte_end":44282,"line_start":223,"line_end":223,"column_start":8,"column_end":21},"name":"read_data_u64","qualname":"::decode::read_data_u64","value":"fn <R> (rd: &mut R) -> Result<u64, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":644},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":44445,"byte_end":44457,"line_start":228,"line_end":228,"column_start":8,"column_end":20},"name":"read_data_i8","qualname":"::decode::read_data_i8","value":"fn <R> (rd: &mut R) -> Result<i8, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":646},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":44594,"byte_end":44607,"line_start":233,"line_end":233,"column_start":8,"column_end":21},"name":"read_data_i16","qualname":"::decode::read_data_i16","value":"fn <R> (rd: &mut R) -> Result<i16, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":648},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":44770,"byte_end":44783,"line_start":238,"line_end":238,"column_start":8,"column_end":21},"name":"read_data_i32","qualname":"::decode::read_data_i32","value":"fn <R> (rd: &mut R) -> Result<i32, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":650},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":44946,"byte_end":44959,"line_start":243,"line_end":243,"column_start":8,"column_end":21},"name":"read_data_i64","qualname":"::decode::read_data_i64","value":"fn <R> (rd: &mut R) -> Result<i64, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":652},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":45122,"byte_end":45135,"line_start":248,"line_end":248,"column_start":8,"column_end":21},"name":"read_data_f32","qualname":"::decode::read_data_f32","value":"fn <R> (rd: &mut R) -> Result<f32, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":654},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":45298,"byte_end":45311,"line_start":253,"line_end":253,"column_start":8,"column_end":21},"name":"read_data_f64","qualname":"::decode::read_data_f64","value":"fn <R> (rd: &mut R) -> Result<f64, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":656},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":46806,"byte_end":46814,"line_start":287,"line_end":287,"column_start":8,"column_end":16},"name":"read_int","qualname":"::decode::read_int","value":"fn <T, R> (rd: &mut R) -> Result<T, NumValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read up to 9 bytes from the given reader and to decode them as integral `T` value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":658},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":48070,"byte_end":48084,"line_start":317,"line_end":317,"column_start":8,"column_end":22},"name":"read_array_len","qualname":"::decode::read_array_len","value":"fn <R> (rd: &mut R) -> Result<u32, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read up to 5 bytes from the given reader and to decode them as a big-endian u32\n array size.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":660},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":48816,"byte_end":48828,"line_start":339,"line_end":339,"column_start":8,"column_end":20},"name":"read_map_len","qualname":"::decode::read_map_len","value":"fn <R> (rd: &mut R) -> Result<u32, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read up to 5 bytes from the given reader and to decode them as a big-endian u32\n map size.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":662},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":49408,"byte_end":49420,"line_start":355,"line_end":355,"column_start":8,"column_end":20},"name":"read_bin_len","qualname":"::decode::read_bin_len","value":"fn <R> (rd: &mut R) -> Result<u32, ValueReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read up to 5 bytes from the given reader and to decode them as Binary array length.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":666},"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5876,"byte_end":5891,"line_start":161,"line_end":161,"column_start":11,"column_end":26},"name":"MSGPACK_VERSION","qualname":"::MSGPACK_VERSION","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Version of the MessagePack [spec](http://github.com/msgpack/msgpack/blob/master/spec.md).\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6515,"byte_end":6521,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":9978,"byte_end":9984,"line_start":148,"line_end":148,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":10076,"byte_end":10082,"line_start":154,"line_end":154,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10974,"byte_end":10990,"line_start":32,"line_end":32,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":11110,"byte_end":11115,"line_start":38,"line_end":38,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":11562,"byte_end":11576,"line_start":54,"line_end":54,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":11690,"byte_end":11695,"line_start":60,"line_end":60,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":14660,"byte_end":14675,"line_start":155,"line_end":155,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":14882,"byte_end":14897,"line_start":163,"line_end":163,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":15099,"byte_end":15104,"line_start":171,"line_end":171,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":15327,"byte_end":15342,"line_start":180,"line_end":180,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":15680,"byte_end":15695,"line_start":193,"line_end":193,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":60719,"byte_end":60736,"line_start":19,"line_end":19,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":61245,"byte_end":61262,"line_start":35,"line_end":35,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":61424,"byte_end":61441,"line_start":41,"line_end":41,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":38444,"byte_end":38458,"line_start":53,"line_end":53,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":39128,"byte_end":39142,"line_start":73,"line_end":73,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":39297,"byte_end":39311,"line_start":79,"line_end":79,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":39504,"byte_end":39519,"line_start":87,"line_end":87,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":42040,"byte_end":42057,"line_start":159,"line_end":159,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":42885,"byte_end":42902,"line_start":181,"line_end":181,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":43057,"byte_end":43074,"line_start":187,"line_end":187,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":43282,"byte_end":43299,"line_start":195,"line_end":195,"column_start":31,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5722,"byte_end":5728,"line_start":155,"line_end":155,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":32}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5738,"byte_end":5744,"line_start":156,"line_end":156,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":330}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":6515,"byte_end":6521,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":9978,"byte_end":9984,"line_start":148,"line_end":148,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":668},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,109,97,114,107,101,114,46,114,115],"byte_start":10076,"byte_end":10082,"line_start":154,"line_end":154,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":668},"to":{"krate":2,"index":2612}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":10974,"byte_end":10990,"line_start":32,"line_end":32,"column_start":22,"column_end":38},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":11110,"byte_end":11115,"line_start":38,"line_end":38,"column_start":33,"column_end":38},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":254},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":11562,"byte_end":11576,"line_start":54,"line_end":54,"column_start":22,"column_end":36},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":268},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":11690,"byte_end":11695,"line_start":60,"line_end":60,"column_start":31,"column_end":36},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":254},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":14660,"byte_end":14675,"line_start":155,"line_end":155,"column_start":33,"column_end":48},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":686},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":14882,"byte_end":14897,"line_start":163,"line_end":163,"column_start":31,"column_end":46},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":686},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":15099,"byte_end":15104,"line_start":171,"line_end":171,"column_start":32,"column_end":37},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":254},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":15327,"byte_end":15342,"line_start":180,"line_end":180,"column_start":23,"column_end":38},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":686},"to":{"krate":1,"index":2390}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,101,110,99,111,100,101,47,109,111,100,46,114,115],"byte_start":15680,"byte_end":15695,"line_start":193,"line_end":193,"column_start":18,"column_end":33},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":686},"to":{"krate":2,"index":7714}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":60719,"byte_end":60736,"line_start":19,"line_end":19,"column_start":27,"column_end":44},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":692},"to":{"krate":1,"index":2390}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":61245,"byte_end":61262,"line_start":35,"line_end":35,"column_start":22,"column_end":39},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":692},"to":{"krate":2,"index":7714}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,115,116,114,46,114,115],"byte_start":61424,"byte_end":61441,"line_start":41,"line_end":41,"column_start":35,"column_end":52},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":692},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":38444,"byte_end":38458,"line_start":53,"line_end":53,"column_start":23,"column_end":37},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":716},"to":{"krate":1,"index":2390}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":39128,"byte_end":39142,"line_start":73,"line_end":73,"column_start":18,"column_end":32},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":716},"to":{"krate":2,"index":7714}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":39297,"byte_end":39311,"line_start":79,"line_end":79,"column_start":32,"column_end":46},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":39504,"byte_end":39519,"line_start":87,"line_end":87,"column_start":22,"column_end":37},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":710},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":42040,"byte_end":42057,"line_start":159,"line_end":159,"column_start":23,"column_end":40},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":722},"to":{"krate":1,"index":2390}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":42885,"byte_end":42902,"line_start":181,"line_end":181,"column_start":18,"column_end":35},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":722},"to":{"krate":2,"index":7714}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":43057,"byte_end":43074,"line_start":187,"line_end":187,"column_start":32,"column_end":49},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":722},"to":{"krate":2,"index":2616}},{"span":{"file_name":[47,104,111,109,101,47,105,108,121,97,100,114,117,122,104,105,110,105,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,109,112,45,48,46,56,46,55,47,115,114,99,47,100,101,99,111,100,101,47,109,111,100,46,114,115],"byte_start":43282,"byte_end":43299,"line_start":195,"line_end":195,"column_start":31,"column_end":48},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":722},"to":{"krate":2,"index":2616}}]}